/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package johnbrooksupgrade;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import org.apache.pdfbox.exceptions.COSVisitorException;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.edit.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDFont;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;
import org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage;
//import classes for functionality

public class SalesInfo extends javax.swing.JFrame {

    protected String Filename;
    protected String Salesmen;
    protected String Date;
    protected String ClientName;
    protected String ProjectName;
    public Maininterface mainDataEntry; 
    private TextOverlay overlay;
    private BufferedImage image2;
    private String Branch;

    //import classes and creation of variables
    /**
     * @param mainDataEntryIn
     */
    public SalesInfo(Maininterface mainDataEntryIn) {   
        // This class constructor requires the calling class to pass a reference to itself.
        // That will allow each new instance of SalesInfo to know who called it.
        // Here, we call that calling class "mainDataEntry".
        mainDataEntry = mainDataEntryIn;   
        
        initComponents();
        
        //Set the date to today's by default
        DateInput.setText(GetCurrentDate());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Save = new javax.swing.JButton();
        SalesmenInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ClientnameInput = new javax.swing.JTextField();
        DateInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ProjectNameInput = new javax.swing.JTextField();
        jComboBoxBranch = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        Save.setText("Generate PDF");
        Save.setToolTipText("");
        Save.setActionCommand("");
        Save.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SaveActionPerformed(evt);
            }
        });

        SalesmenInput.setText("Name");

        jLabel1.setText("Name of SalesPerson");

        jLabel2.setText("Name of Client");

        ClientnameInput.setText("Client");

        jLabel3.setText("Date");

        jLabel4.setText("Project Name");

        ProjectNameInput.setText("Name");

        jComboBoxBranch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Branch", "Auckland", "Wellington", "Christchurch" }));
        jComboBoxBranch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBoxBranchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Save)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClientnameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(SalesmenInput)
                            .addComponent(ProjectNameInput))
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jComboBoxBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SalesmenInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClientnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ProjectNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jComboBoxBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(Save))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBranchActionPerformed
        int item = jComboBoxBranch.getSelectedIndex();

        
        switch (item) {
            case 0:
                Branch = (null);

                break;
                
            case 1:
                Branch = ("AUCKLAND");

                break;
            case 2:
                Branch = ("WELLINGTON");

                break;
            case 3:
                Branch = ("CHRISTCHURCH");

                break;
        }//get the selected item
        //gets the value of the matching index or information
    }//GEN-LAST:event_jComboBoxBranchActionPerformed

    private void close() {
        WindowEvent windowclosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(windowclosingEvent);
    }//closes the window once you click save

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {
        Salesmen = SalesmenInput.getText();
        Date = DateInput.getText();
        ClientName = ClientnameInput.getText();
        ProjectName = ProjectNameInput.getText();
        //grab values and put them into a variable
        if (Branch == null) {
            JOptionPane.showMessageDialog(null,
                    "Please Select a branch and try again.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        //error message box if they don't select a branch
        if (Branch != null) {
            
//            JFileChooser chooser = new JFileChooser();
//            FileNameExtensionFilter myfilter = new FileNameExtensionFilter("PDF FILE", "pdf");
//            chooser.addChoosableFileFilter(myfilter);
//            chooser.setAcceptAllFileFilterUsed(false);
//            chooser.showSaveDialog(null);
            
            //We want to save the file to Windows' temporary files folder so it can be loaded from there straight away
            //This temporary file is deleted when the program is exited
            File myfile = new File("C:\\Windows\\Temp\\ConveyorFile.pdf");
            
            //creates a new pdf
            if ((myfile) != null) {
                try {
                    PDDocument doc;
                    PDPage page;

                    doc = new PDDocument();
            // Create a new blank page and add it to the document
                    
                    page = new PDPage();
                    doc.addPage(page);
                    PDFont font = PDType1Font.COURIER_BOLD;
                    PDPageContentStream content = new PDPageContentStream(doc, page);
                    content.beginText();
                    content.setFont(font, 30);
                    
            // creates a new page and gives it formatting of text
                    content.moveTextPositionByAmount(110, 600);
                    content.drawString("Technical Specifications ");
                    PDFont font2 = PDType1Font.COURIER;
                    content.setFont(font, 14);
                    content.moveTextPositionByAmount(-50, -65);
                    content.drawString("Date:" + getdate());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Sales person: " + getsalesMen());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Client Name: " + getClientName());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Project Name: " + getProjectName());
                    content.moveTextPositionByAmount(0, -32);
                    
                // Specifications    
                    content.setFont(PDType1Font.COURIER_BOLD, 20);
                    content.drawString("Specifications");
                    content.moveTextPositionByAmount(0, -10);
                    content.setFont(font, 14);
                    content.moveTextPositionByAmount(10, -14);
                    content.drawString("Speed of Belt M/pm: " + mainDataEntry.getSpeedofbeltanswer29f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Overall Circumference : " + mainDataEntry.getCircumferenceanswer2f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Metres per minute: " + mainDataEntry.getMetresperminuteanswer4f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Metres per hour: " + mainDataEntry.getMetresperhouranswer5f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Product per hour: " + mainDataEntry.getLengthperhouranswer7f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Kg's per hour: " + mainDataEntry.getKgsperhouranswer9f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Kg at any given time: " + mainDataEntry.getKgatanygiventimeanswer10f());
                    content.moveTextPositionByAmount(-10, -28);
                    
                // Results
                    content.setFont(PDType1Font.COURIER_BOLD, 20);
                    content.drawString("Results");
                    content.moveTextPositionByAmount(0, -10);
                    content.setFont(font, 14);
                    content.moveTextPositionByAmount(10, -14);
                    content.drawString("RPM: " + String.valueOf(mainDataEntry.getRpmconveyor34()));
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Coeff. friction: " + mainDataEntry.getRadiananswer25f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Total belt pull Kgf  : " + mainDataEntry.getBeltloadanswer13f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Nm Torque  : " + mainDataEntry.getNmanswer15f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Service Factor  : " + mainDataEntry.getServicefactor17f());
                    content.moveTextPositionByAmount(0, -14);
                    content.drawString("Design Kw  : " + mainDataEntry.getDesignkwanswer18f());
                    //grabbing the values in the selected variables and positions them

                //TODO: Gearbox recommendations 
                    
                    content.endText();
                    image2 = ImageIO.read(new File("logosmall.jpg"));
                    BufferedImage logo = image2;
                    // writes the image to the file
                    
                    PDXObjectImage jblogo = new PDPixelMap(doc, logo);

                    content.drawImage(jblogo, 20, 650);
                    //postions image
                    content.close();
                    doc.getDocument();
                    doc.save(myfile.getAbsolutePath());
                    
                    // open the file 
                    Desktop.getDesktop().open(myfile);
                    
                    doc.close();
                    close();
                    //saves pdf and closes it
                } catch (IOException | COSVisitorException ie) {
                    JOptionPane.showMessageDialog(null, ie.getMessage(), "Error!", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }
    
    private String GetCurrentDate()
    {
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        
        return dateFormat.format(date);
    }

    //<editor-fold defaultstate="collapsed" desc="getters">
    public String getdate() {
        return Date;
    }

    public String getsalesMen() {
        return Salesmen;
    }

    public String getClientName() {
        return ClientName;
    }

    public String getProjectName() {
        return ProjectName;
    }
    //</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ClientnameInput;
    private javax.swing.JTextField DateInput;
    private javax.swing.JTextField ProjectNameInput;
    private javax.swing.JTextField SalesmenInput;
    private javax.swing.JButton Save;
    private javax.swing.JComboBox jComboBoxBranch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
